{"version":3,"sources":["components/Contact.js","components/Phonebook.js","components/ContactForm.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Contact","name","number","deleteContact","type","onClick","Phonebook","persons","map","person","key","id","ContactForm","newName","handleAddName","newNumber","handleAddNumber","addContact","value","onChange","axios","get","then","response","data","newObject","post","delete","put","Notification","message","style","color","fontStyle","fontSize","App","useState","setPersons","useEffect","contactService","setNewName","setNewNumber","newFilter","setNewFilter","notification","setNotification","event","target","preventDefault","matches","filter","length","window","confirm","newContact","updatedList","concat","catch","error","setTimeout","toLowerCase","includes","contact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9487e170.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contact = ({ name, number , deleteContact}) => {\r\n    return (\r\n      <div>\r\n        <p>{name} {number} <button type=\"submit\" onClick={deleteContact}> delete </button></p>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Phonebook = ({ persons, deleteContact }) =>{\r\n    return(\r\n        <div>\r\n            <h2>Numbers </h2>\r\n            <ul> {persons.map(person => <Contact key={person.name} \r\n            name={person.name} number={person.number} deleteContact={() => deleteContact(person.id)}\r\n            />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Phonebook","import React from 'react'\r\n\r\nconst ContactForm = ({ newName, handleAddName, newNumber, handleAddNumber, addContact }) => {\r\n    return (\r\n        <form>\r\n            <h2>Add a new contact</h2>\r\n            <div>\r\n                name: <input value={newName} onChange={handleAddName}/>\r\n            </div>\r\n            <div>number: <input value={newNumber} onChange={handleAddNumber}/></div>\r\n            <div>\r\n                <button type=\"submit\" onClick={addContact} >add</button> \r\n            </div>\r\n        </form>\r\n    )\r\n  }\r\n\r\nexport default ContactForm","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    const notificationStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n      }\r\n      \r\n    if (message === null) {\r\n    return null\r\n    }\r\n\r\n    return (\r\n      <div style={notificationStyle}>\r\n        <p>{message}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState } from 'react'\nimport Phonebook from './components/Phonebook'\nimport ContactForm from './components/ContactForm'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n\n  const deleteContact = (id) => {\n\n    const contact = persons.filter(person => person.id === id)\n\n    if (window.confirm(`Delete ${contact[0].name}?`)) {\n      contactService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setNotification(`${contact[0].name}'s phone number was succsesfully deleted.`)\n        setTimeout(() => setNotification(null), 4000)\n      })\n      .catch(error => {\n        setNotification(`${contact[0].name}'s phone number was already deleted.`)\n        setPersons(persons.filter(person => person.id !== contact[0].id))\n      }\n\n      )\n    }\n  }\n\n  const addContact = (event) =>{\n    event.preventDefault()\n\n    const matches = persons.filter(person => person.name === newName)\n    if (matches.length !== 0){\n      window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      setNewName('')\n      setNewNumber('')\n\n      const id = matches[0].id\n\n      const newContact = {\n        name: newName,\n        number: newNumber,\n        id: id\n      }\n      contactService\n      .update(id, newContact)\n      .then(response => {\n        const updatedList = persons.filter(person => person.id !== id)\n        setPersons(updatedList.concat(newContact))\n      })\n      .catch(error => {\n        setNotification(`${newName}'s phone number was already deleted.`)\n        setPersons(persons.filter(person => person.id !== id))\n      }\n\n      )\n      setNotification(`${newName}'s phone number was succsesfully updated.`)\n      setTimeout(() => setNotification(null), 4000)\n      setNewName('')\n      setNewNumber('')\n      return\n    }\n\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }\n\n    contactService\n    .create(newContact)\n    .then(response => {\n      setPersons(persons.concat(response))\n      setNotification(`${newName}'s phone number was succsesfully added.`)\n      setTimeout(() => setNotification(null), 4000)\n      setNewName('')\n      setNewNumber('')\n    })\n  }\n\n  const handleAddName = (event) =>{\n    setNewName(event.target.value)\n  }\n\n  const handleAddNumber = (event) =>{\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) =>{\n    setNewFilter(event.target.value)\n  }\n\n  return (  \n    <div>\n      <Notification message={notification} />\n      <h2>Phonebook</h2>\n      <form>\n        <div>\n          Filter shown with: <input value={newFilter} onChange={handleNewFilter}/>\n        </div>\n      </form>\n      <ContactForm newName={newName} handleAddName={handleAddName} newNumber={newNumber} handleAddNumber={handleAddNumber} addContact={addContact}/>\n      <Phonebook persons={persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))} deleteContact={deleteContact}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}